2022-07-21 at 04:09:40 | INFO | configuration.py |                                     get_training_pipeline_config |
 Training pipeline config: TrainingPipelineConfig(experiment_id='a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e', previous_experiment_id='88d55c68-11cd-4c99-bef5-9116b940d778', artifact_dir='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact', experiment_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/experiment/experiment.csv')
2022-07-21 at 04:09:40 | INFO | pipeline.py |                                     run_pipeline |
 Pipeline starting.
2022-07-21 at 04:09:40 | INFO | pipeline.py |                                     run_pipeline |
 Pipeline experiment: a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e
2022-07-21 at 04:09:40 | INFO | test.py |                                     main |
 main function execution completed.
2022-07-21 at 04:09:40 | INFO | configuration.py |                                     get_data_ingestion_config |
 Data Ingestion config: DataIngestionConfig(train_dataset_download_url='https://raw.githubusercontent.com/pk1308/datasets/master/BigMartSales/Train.csv', raw_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/raw_data/Train.csv', ingested_test_data_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/ingested_data/Test.csv', ingested_train_data_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/ingested_data/Train.csv')
2022-07-21 at 04:09:40 | INFO | stage_00_data_ingestion.py |                                     __init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-07-21 at 04:09:42 | INFO | stage_00_data_ingestion.py |                                     download_data |
 Downloading file from :[https://raw.githubusercontent.com/pk1308/datasets/master/BigMartSales/Train.csv] into :[/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/raw_data/Train.csv]
2022-07-21 at 04:09:42 | INFO | stage_00_data_ingestion.py |                                     split_data_as_train_test |
 Reading csv file: [/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/raw_data/Train.csv]
2022-07-21 at 04:09:42 | INFO | stage_00_data_ingestion.py |                                     split_data_as_train_test |
 Splitting data into train and test
2022-07-21 at 04:09:42 | INFO | stage_00_data_ingestion.py |                                     split_data_as_train_test |
 Exporting training dataset to file: [/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/ingested_data/Train.csv]
2022-07-21 at 04:09:42 | INFO | stage_00_data_ingestion.py |                                     split_data_as_train_test |
 Exporting test dataset to file: [/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/ingested_data/Test.csv]
2022-07-21 at 04:09:42 | INFO | stage_00_data_ingestion.py |                                     split_data_as_train_test |
 Data Ingestion artifact:[DataIngestionArtifact(train_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/ingested_data/Train.csv', test_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage00_data_ingestion/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/ingested_data/Test.csv', is_ingested=True, message='Data ingestion completed successfully.')]
2022-07-21 at 04:09:42 | INFO | stage_00_data_ingestion.py |                                     __del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Ingestion log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-07-21 at 04:09:42 | INFO | stage_01_data_validation.py |                                     __init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Validation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-07-21 at 04:09:42 | INFO | stage_01_data_validation.py |                                     is_train_test_file_exists |
 Checking if training and test file is available
2022-07-21 at 04:09:42 | INFO | stage_01_data_validation.py |                                     is_train_test_file_exists |
 Is train and test file exists?-> True
2022-07-21 at 04:09:43 | INFO | stage_01_data_validation.py |                                     initiate_data_validation |
 Data validation artifact: DataValidationArtifact(schema_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/config/schema.yaml', report_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage01_data_validation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/report/report.json', report_page_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage01_data_validation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/report/report.html', is_validated=True, message='Data Validation performed successfully.')
2022-07-21 at 04:09:43 | INFO | stage_01_data_validation.py |                                     __del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Validation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-07-21 at 04:09:43 | INFO | configuration.py |                                     get_data_transformation_config |
 Data transformation config: DataTransformationConfig(transformed_train_dir='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage02_data_transformation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/stage02_data_transformation/train', transformed_test_dir='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage02_data_transformation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/stage02_data_transformation/test', preprocessed_object_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage02_data_transformation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/stage02_data_transformation/preprocessed/preprocessed.pkl')
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     __init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Obtaining preprocessing object.
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     get_data_transformer_object |
 Categorical columns: ['Item_Identifier', 'Item_Fat_Content', 'Item_Type', 'Outlet_Identifier', 'Outlet_Type']
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     get_data_transformer_object |
 Numerical columns: ['Item_Weight', 'Item_Visibility', 'Item_MRP', 'Outlet_Establishment_Year']
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Obtaining training and test file path.
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Selected columns: ['Item_Identifier', 'Item_Weight', 'Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier', 'Outlet_Establishment_Year', 'Outlet_Type', 'Item_Outlet_Sales']
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Loading training and test data as pandas dataframe.
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Splitting input and target feature from training and testing dataframe.
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Applying preprocessing object on training dataframe and testing dataframe
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     transform |
 Transforming data
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     transform |
 Index(['Item_Weight', 'Item_Visibility', 'Item_MRP',
       'Outlet_Establishment_Year'],
      dtype='object')
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     transform |
 Transforming data
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     transform |
 Index(['Item_Weight', 'Item_Visibility', 'Item_MRP',
       'Outlet_Establishment_Year'],
      dtype='object')
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Saving transformed training and testing array.
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Saving preprocessing object.
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     initiate_data_transformation |
 Data transformations artifact: DataTransformationArtifact(is_transformed=True, message='Data transformation successfully.', transformed_train_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage02_data_transformation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/stage02_data_transformation/train/Train.npz', transformed_test_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage02_data_transformation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/stage02_data_transformation/test/Test.npz', preprocessed_object_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage02_data_transformation/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/stage02_data_transformation/preprocessed/preprocessed.pkl')
2022-07-21 at 04:09:43 | INFO | stage_02_data_transformation.py |                                     __del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 


2022-07-21 at 04:09:43 | INFO | configuration.py |                                     get_model_trainer_config |
 Model trainer config: ModelTrainerConfig(trained_model_file_path='/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/BigmartsalesPrediction/app_artifact/stage03_model_training/a9ddc933-c86d-4e1d-9ac1-9bd947e8fd1e/trained_model/model.pkl', base_accuracy=0.5, model_config_file_path='config/model.yaml')
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     __init__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     initiate_model_trainer |
 Loading transformed training dataset
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     initiate_model_trainer |
 Loading transformed testing dataset
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     initiate_model_trainer |
 Splitting training and testing input and target feature
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     initiate_model_trainer |
 Extracting model config file path
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     initiate_model_trainer |
 Initializing model factory class using above model config file: config/model.yaml
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     initiate_model_trainer |
 Expected accuracy: 0.5
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     initiate_model_trainer |
 Initiating operation model selection
2022-07-21 at 04:09:43 | INFO | model_factory.py |                                     get_best_model |
 Started Initializing model from config file
2022-07-21 at 04:09:43 | INFO | model_factory.py |                                     class_for_name |
 Executing command: from <module 'sklearn.tree' from '/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/venv/lib/python3.7/site-packages/sklearn/tree/__init__.py'> import DecisionTreeRegressor
2022-07-21 at 04:09:43 | INFO | model_factory.py |                                     update_property_of_class |
 Executing:$ DecisionTreeRegressor().min_samples_leaf={'type': 'int', 'min': 1, 'max': 15}
2022-07-21 at 04:09:43 | INFO | model_factory.py |                                     class_for_name |
 Executing command: from <module 'sklearn.ensemble' from '/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/venv/lib/python3.7/site-packages/sklearn/ensemble/__init__.py'> import RandomForestRegressor
2022-07-21 at 04:09:43 | INFO | model_factory.py |                                     class_for_name |
 Executing command: from <module 'xgboost' from '/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/venv/lib/python3.7/site-packages/xgboost/__init__.py'> import XGBRegressor
2022-07-21 at 04:09:43 | INFO | model_factory.py |                                     get_best_model |
 Initialized model: [InitializedModelDetail(model_serial_number='model_0', model=DecisionTreeRegressor(min_samples_leaf={'max': 15, 'min': 1, 'type': 'int'}), param_grid_search={'criterion': ['squared_error', 'friedman_mse'], 'splitter': ['best'], 'max_depth': {'type': 'int', 'min': 1, 'max': 15}, 'max_features': ['auto', 'sqrt', 'log2'], 'min_samples_split': {'type': 'int', 'min': 2, 'max': 15}, 'min_samples_leaf': {'type': 'int', 'min': 1, 'max': 15}}, model_name='sklearn.tree.DecisionTreeRegressor'), InitializedModelDetail(model_serial_number='model_1', model=RandomForestRegressor(), param_grid_search={'criterion': ['squared_error', 'absolute_error', 'poisson', 'friedman_mse'], 'n_estimators': [100, 200, 300, 400], 'max_depth': [2, 3, 4, 5], 'max_features': ['auto', 'sqrt', 'log2']}, model_name='sklearn.ensemble.RandomForestRegressor'), InitializedModelDetail(model_serial_number='model_2', model=XGBRegressor(base_score=None, booster=None, callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, gamma=None,
             gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
             max_leaves=None, min_child_weight=None, missing=nan,
             monotone_constraints=None, n_estimators=100, n_jobs=None,
             num_parallel_tree=None, predictor=None, random_state=None,
             reg_alpha=None, reg_lambda=None, ...), param_grid_search={'booster': ['gbtree', 'gblinear', 'dart'], 'n_estimators': [100, 200, 300, 400], 'learning_rate': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]}, model_name='xgboost.XGBRegressor')]
2022-07-21 at 04:09:43 | INFO | model_factory.py |                                     class_for_name |
 Executing command: from <module 'sklearn.model_selection' from '/home/pk/Desktop/MachineLearning/project/BigMart-Sales-Data/venv/lib/python3.7/site-packages/sklearn/model_selection/__init__.py'> import GridSearchCV
2022-07-21 at 04:09:43 | INFO | stage_03_model_trainer.py |                                     __del__ |
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
